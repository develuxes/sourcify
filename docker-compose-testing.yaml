version: "3.3"
services:
  monitor:
    env_file:
    - .env.testing
    container_name: monitor
    build:
      context: .
      dockerfile: src/Dockerfile.monitor
    ports:
    - "${MONITOR_EXTERNAL_PORT}:${MONITOR_PORT}"
    networks:
    - source-verify-network
    restart: always
    volumes:
    - ./repository:/app/repository
  ui:
    env_file:
    - .env.testing
    container_name: ui
    build:
      context: ui
      dockerfile: Dockerfile
    ports:
    - "${UI_EXTERNAL_PORT}:${UI_PORT}"
    networks:
    - source-verify-network
    restart: always
  server:
    env_file:
    - .env.testing
    container_name: server
    build:
      context: .
      dockerfile: src/Dockerfile.server
    ports:
    - "${SERVER_EXTERNAL_PORT}:${SERVER_PORT}"
    volumes:
    - ./repository:/app/repository
    networks:
    - source-verify-network
    restart: always
  localchain:
    image: ethereum/source-verify:localchain-${TAG}
    env_file:
    - .env.testing
    container_name: localchain
    build:
      context: .
      dockerfile: src/Dockerfile.localchain
    ports:
    - "${LOCALCHAIN_EXTERNAL_PORT}:${LOCALCHAIN_PORT}"
    networks:
    - source-verify-network
    restart: always
  repository:
    image: ethereum/source-verify:repository-${TAG}
    env_file:
    - .env.testing
    build:
      context: h5ai-nginx
      dockerfile: Dockerfile
    restart: always
    container_name: repository
    volumes:
      - h5ai:/h5ai
      - ./repository:/data
      - ./h5ai-nginx/options.json:/h5ai/_h5ai/private/conf/options.json
      - ./h5ai-nginx/types.json:/h5ai/_h5ai/private/conf/types.json
    ports:
    - ${NGINX_EXTERNAL_PORT}:${NGINX_PORT}
networks:
  source-verify-network:
volumes:
  repository:
  db:
  h5ai:
    driver: local

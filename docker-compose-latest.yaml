version: "3.5"
services:
  monitor:
    image: ethereum/source-verify:monitor-${TAG}
    env_file:
    - .env.${TAG}
    container_name: monitor-${TAG}
    ports:
    - "${MONITOR_EXTERNAL_PORT}:${MONITOR_PORT}"
    volumes:
    - ./repository:/app/repository
    restart: always
    networks:
    - source-verify-staging
  ui:
    image: ethereum/source-verify:ui-${TAG}
    env_file:
    - .env.${TAG}
    container_name: ui-${TAG}
    ports:
    - "${UI_EXTERNAL_PORT}:${UI_PORT}"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${UI_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
    - source-verify-staging
    volumes:
    - ./.env.${TAG}:/app/.env
  server:
    image: ethereum/source-verify:server-${TAG}
    env_file:
    - .env.${TAG}
    container_name: server-${TAG}
    ports:
    - "${SERVER_EXTERNAL_PORT}:${SERVER_PORT}"
    volumes:
    - ./repository:/app/repository
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
    - source-verify-staging
  repository:
    image: ethereum/source-verify:repository-${TAG}
    restart: always
    container_name: repository-${TAG}
    volumes:
      - h5ai:/h5ai
      - ./repository:/data
    ports:
    - ${REPOSITORY_EXTERNAL_PORT}:${REPOSITORY_PORT}
    networks:
    - source-verify-staging
  localchain:
    image: ethereum/source-verify:localchain-${TAG}
    container_name: localchain
    ports:
    - "${LOCALCHAIN_EXTERNAL_PORT}:${LOCALCHAIN_PORT}"
    networks:
    - source-verify-staging
    restart: always
volumes:
  repository:
  db:
  h5ai:
    driver: local
networks:
  source-verify-staging:

version: "3.3"
services:
  monitor:
    image: blockchainit/source-verify-monitor:${TAG}
    env_file:
    - .env.testing
    container_name: monitor
    ports:
    - "${MONITOR_EXTERNAL_PORT}:${MONITOR_PORT}"
    networks:
    - source-verify-testing-network
    restart: always
    volumes:
    - ./repository:/app/repository
  ui:
    image: blockchainit/source-verify-ui:${TAG}
    env_file:
    - .env.testing
    container_name: ui
    build:
      context: ui
      dockerfile: Dockerfile
    ports:
    - "${UI_EXTERNAL_PORT}:${UI_PORT}"
    networks:
    - source-verify-testing-network
    restart: always
  server:
    image: blockchainit/source-verify-server:${TAG}
    env_file:
    - .env.testing
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
    - "${SERVER_EXTERNAL_PORT}:${SERVER_PORT}"
    volumes:
    - ./repository:/app/repository
    networks:
    - source-verify-testing-network
    restart: always
  localchain:
    image: blockchainit/source-verify-localchain:${TAG}
    env_file:
    - .env.testing
    container_name: localchain
    build:
      context: .
      dockerfile: Dockerfile.localchain    
    ports:
    - "${LOCALCHAIN_EXTERNAL_PORT}:${LOCALCHAIN_PORT}"
    networks:
    - source-verify-testing-network
    restart: always
  nginx:
    image: nginx:stable
    container_name: nginx
    ports: 
    - ${NGINX_EXTERNAL_PORT}:${NGINX_PORT}
    volumes:
    - repository:/usr/share/nginx/html
    - ./nginx.conf:/etc/nginx/conf.d/default.conf
networks:
  source-verify-testing-network:
volumes:
  repository:
  db:
